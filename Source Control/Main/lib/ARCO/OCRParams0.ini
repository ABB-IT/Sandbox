[OCRGeneral]
OutputTypes=TXT;PDF;
;<!--Separate by ;-->

FastMode=1
;<!--This property set to TRUE provides 2-2.5 times faster recognition speed at the cost of a moderately increased error rate (1.5-2 times more errors). -->

BalancedMode=0   
;<!--If this property is TRUE, the recognition will run in balanced mode. The balanced mode is an intermediate mode between full and fast modes. (Only from FR 8.0)-->

DetectInvertedImage=1
;<!--This property set to TRUE tells FineReader Engine to detect whether the image is inverted (white text against black background).-->

DetectOrientation=1
;<!--If this property is TRUE, the page orientation is detected during layout analysis, and if it differs from normal, FineReader Engine automatically rotates the image.-->

FlexiFormsDA=0
;<!--This property set to TRUE tells FineReader Engine to locate every text existed on the page, including small text areas of low quality and text on diagrams and pictures inside-->

FullTextIndexDA=1
;<!--This property set to TRUE tells ABBYY FineReader Engine to detect all text on an image, including text embedded into the image. (Only from FR 8)-->

OverwriteResolution=1
;<!--Allows to overwrite resolution of the prepared image.-->

ResolutionToOverwrite=300
;<!--Resolution in dpi of the image when OverwriteResolution is set to true-->

RemoveGarbage=0
<!--This property set to TRUE tells FineReader Engine to remove small garbage (excess dots that are smaller than a certain size) from the prepared image.-->

SingleColumnMode=0
;<!--If this property is set to TRUE, the analysis procedure presumes that there is only one column of text on a page. -->

KeepBullets=0
;<!--Specifies if the shape of bullets in the recognized text should be kept. This property is set to FALSE by default.-->

OutputPictureResolution=300
;<!--Resolution you want for the pictures in the output files-->

OutputKeepLines=1
;<!--Specifies if original lines in recognized text are retained during export.  (HTML & RTF)-->

OutputSeparatePages=1
;<!--If this property is TRUE and several pages are exported in HTML format, <HR> tag is inserted between pages, which makes browser draw a horizontal rule. (HTML & RTF)-->

HTMLKeepTextAndBackgroundColor=1
;<!--Specifies if original colors of text and background are retained during export of the recognized text in HTML format. -->

PDFAuthor=
;<!--Specifiy the author of the PDF export file-->

PDFCreator=
;<!--Specifiy the creator of the PDF export file-->

PDFExportMode=IOT
;<!--Specify the way you export your PDF: TO (TextOnly), TOI (TextOnImage), IOT (ImageOnText), IO (ImageOnly)-->

PDFWriteTaggedMode=0
;<!--Specifies if the recognized text should be exported to tagged PDF. Tagged PDF is a particular use of structured PDF that allows page content to be extracted and used for various purposes such as reflow of text and graphics, conversion to file formats such as HTML and XML, and accessibility to the visually impaired.  (Only from FR 8.0)-->

PDFWriteLinks=1
;<!--Specifies that the hyperlinks must be retained during export of the recognized text into PDF/A format. This property is TRUE by default. If this property is FALSE the hyperlinks are exported as text. -->

PDFVersion=6
;<!-- Auto: 0; Version 1.3 (not pdf/a): 3; Version 1.4: 4; Version 1.5: 5; Version 1.6: 6

RTFFormatWord95=0
;<!--Specifies whether Word95 version of DOC-format is used for export.-->

RTFWritePictures=0
;<!--Specifies if pictures are written in files in RTF/DOC/WordXML format.-->

TXTIsCSV=0
;<!--This property specifies to which format export is performed. If it is TRUE, recognized text is exported in CSV format, and in TXT format otherwise. -->


;<!--PDF Encryption only valid from FR 8-->
PDFOwnerPassword=
;<!--Stores owner password. Opening the document with the correct owner password (assuming it is not the same as the user password) allows full (owner) access to the document.-->

PDFUserPassword=
;<!--Stores the user password. Opening the document with the correct user password (or opening a document that does not have a user password) allows additional operations to be performed according to the user access permissions specified in the document’s encryption dictionary. -->

PDFIsEncryptionRequested=0
;<!--Specifies whether the PDF file must be encrypted-->

PDFKeyLength=0
;<!--Size of encryption (use number): 40Bit = 5,48Bit = 6,56Bit = 7,64Bit = 8,72Bit = 9,80Bit = 10,88Bit = 11,96Bit = 12,104Bit = 13,112Bit = 14,120Bit = 15,128Bit = 16-->

PDFUseAES=0
;<!--Enables/disables a high (128-bit AES) encryption level, but Acrobat 6.0 (or earlier) users cannot open PDF documents with this encryption level.-->

PDFPermissionAddAnnotations=0
;<!--Enables/disables adding or modifying text annotations and interactive form fields.-->

PDFPermissionAssembleDoc=0
;<!--Enables/disables assembling the document: inserting, rotating, or deleting pages and creating navigation elements such as bookmarks or thumbnail images.-->

PDFPermissionExtractTextAndGraphics=0
;<!--Enables/disables copying or otherwise extracting text and graphics from the document. -->

PDFPermissionExtractTextAndGraphicsExt=0
;<!--Enables/disables extracting text and graphics (to make the accessible to users with disabilities or for other purposes). -->

PDFPermissionFillFormFields=0
;<!--Enables/disables filling out forms (that is, filling out existing interactive form fields) and signing the document (which amounts to filling out existing signature fields, a type of interactive form field). -->

PDFPermissionModifyContent=0
;<!--Enables/disables modifying the contents of the document. -->

PDFPermissionPrint=0
;<!--Enables/disables printing the document. -->

PDFPermissionPrintEx=0
; <!--Enables/disables printing to a representation from which a faithful digital copy of the PDF content could be generated. Disallowing such printing may result in degradation of output quality (a feature implemented as "Print As Image" in Acrobat).-->
